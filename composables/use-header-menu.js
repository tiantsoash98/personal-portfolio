export default () => {
    const menu = ref(null)
    const tooglers = ref(null)
    const ellipse = ref(null)
    const links = ref(null)
    const headerMenuState = useHeaderMenuState()
    const { 
        initHeaderMenuAnimate, 
        destroyHeaderMenuAnimate,
        playOpenAnimation, 
        playCloseAnimation,
        playLinksHoverAnimation,
        playLinksHoverOutAnimation
    } = useHeaderMenuAnimate()


    // Init Header behavior 
    const initHeaderMenu = () => {
        // Init header menu animate on mounted
        initHeaderMenuAnimate()

        menu.value = document.querySelector(".menu")
        // Bind event to tooglers
        tooglers.value = document.querySelectorAll(".menu-toogler")
        tooglers.value.forEach(toogler => {
            toogler.addEventListener("click", toogleMenu)
        })

        ellipse.value = menu.value.querySelector(".ellipse__wrapper")
        links.value = menu.value.querySelector(".menu__links")
        links.value.addEventListener("mouseenter", playLinksHoverAnimation)
        links.value.addEventListener("mouseleave", playLinksHoverOutAnimation)
    }

    // Destroy on unmounted
    const destroyHeaderMenu = () => {
        destroyHeaderMenuAnimate()

        if(tooglers.value){
            tooglers.value.forEach(toogler => {
                toogler.removeEventListener("click", toogleMenu)
            })
        }
        if(links.value){
            links.value.removeEventListener("mouseenter", playLinksHoverAnimation)
            links.value.removeEventListener("mouseleave", playLinksHoverOutAnimation)
        }
    }

    const toogleMenu = (event) => {
        if(headerMenuState.value == "close"){
            headerMenuState.value = "open"
            menu.value.setAttribute("aria-expanded", "true")

            playOpenAnimation().then(() => {
                // Remove inline style generated by gsap to allow hover effect
                menu.value.querySelectorAll('.menu-link__title').forEach(title => {
                    title.style.removeProperty('opacity')
                })
            })
        }
        else if(headerMenuState.value == "open"){
            headerMenuState.value = "close"
            menu.value.setAttribute("aria-expanded", "false")
            playCloseAnimation()
        }
    }

    return {
        initHeaderMenu,
        destroyHeaderMenu
    }
}